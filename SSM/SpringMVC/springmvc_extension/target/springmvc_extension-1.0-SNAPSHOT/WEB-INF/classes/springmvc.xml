<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:content="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫面控制层组件-->
    <content:component-scan base-package="com.springmvc.controller"></content:component-scan>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--
        配置默认的 Servlet 处理静态资源
        <mvc:default-servlet-handler/>: 浏览器的请求全部被 DefaultServlet 处理
        <mvc:annotation-driven/>: 浏览器的请求全部被 DispatcherServlet 处理
        <mvc:default-servlet-handler/> + <mvc:annotation-driven/>
            此时浏览器的请求会优先被 DispatcherServlet 处理
            无法处理则交给 DefaultServlet
    -->
    <mvc:default-servlet-handler/>

    <!--开启 MVC 的注解驱动-->
    <mvc:annotation-driven/>

    <!--
        视图控制器： 为当前请求直接设置视图名称实现页面跳转
        若设置视图控制器，则只有视图控制器所设置的请求会被处理，其他请求将全部 404
        此时必须配置一个标签： <mvc:annotation-driven></mvc:annotation-driven>
    -->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>

    <bean id="firstInterceptor" class="com.springmvc.interceptor.FirstInterceptor"></bean>
    <bean id="secondInterceptor" class="com.springmvc.interceptor.SecondInterceptor"></bean>

    <mvc:interceptors>
        <!--bean 和 ref 标签配置的拦截器默认对 DispatcherServlet 处理的所有请求进行拦截-->
        <ref bean="firstInterceptor"></ref>
        <ref bean="secondInterceptor"></ref>
        <!--<bean class="com.springmvc.interceptor.FirstInterceptor"></bean>-->
        <!--<mvc:interceptor>
            &lt;!&ndash;
                mapping: 需要拦截的请求路径
                exclude-mapping: 需要排除的拦截路径
                ref: 配置拦截器
            &ndash;&gt;
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/abc"/>
            <ref bean="firstInterceptor"></ref>
        </mvc:interceptor>-->
    </mvc:interceptors>

    <!--使用 xml 配置异常处理-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                &lt;!&ndash;
                    key 示处理器方法执行过程中出现的异常
                    value 值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面
                &ndash;&gt;
                <prop key="java.lang.ArithmeticException">error</prop>
            </props>
        </property>
        &lt;!&ndash;
            exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享
        &ndash;&gt;
        <property name="exceptionAttribute" value="ex"></property>
    </bean>-->

</beans>